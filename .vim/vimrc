" Vim config file for gbp

" Tell Vim to use 256 colours
set t_Co=256

" Activate mouse control
" set mouse=a

" The following is required for Vundle
set nocompatible 

"autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

" The following is also required
filetype off 

" --- Start Vundle Stuff ---
" Everything that references Vundle plugins must lie in this section, for
" clean operation in the case where Vundle is not present.
"
" Brief help:
"    :PluginList       - lists configured plugins
"    :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
"    :PluginSearch foo - searches for foo; append `!` to refresh local cache
"    :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
" see :h vundle for more details or wiki for FAQ
"
" First, set the runtime path to include Vundle and initialize.
set rtp+=~/.vim/bundle/Vundle.vim

" Check if Vundle is installed and print a message if not.
if empty(glob("~/.vim/bundle/Vundle.vim"))
    echo "\nVundle has not been installed.  Download via:\n    git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim\nand install packages by running :PlugingsInstall from within vim.\n"
else
    " List Plugins between vundle#begin/end.
    call vundle#begin('~/.vim/bundle')
        " Let Vundle manage Vundle, required
        Plugin 'VundleVim/Vundle.vim'
        " For YCM installation instructions, go here:
        " https://github.com/Valloric/YouCompleteMe#installation
        Plugin 'Valloric/YouCompleteMe' 
        Plugin 'airblade/vim-gitgutter' 
        Plugin 'vim-airline/vim-airline'
        Plugin 'vim-airline/vim-airline-themes'
        " Add Molokai colorscheme.  Needs to be chosen later.
        Plugin 'tomasr/molokai' 
    call vundle#end() " required
    
    " Set color scheme(s)
    colorscheme molokai
    let g:airline_theme='molokai'
endif
" --- End Vundle Stuff ---

" required
filetype plugin indent on

" To ignore plugin indent changes, instead use:
"filetype plugin on

" YCM settings
"let g:ycm_min_num_of_chars_for_completion = 99
nnoremap <leader>y :let g:ycm_auto_trigger=0<CR> "turn YCM off
nnoremap <leader>Y :let g:ycm_auto_trigger=1<CR> "turn YCM on

" Set a hotkey for toggling paste mode
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>
set showmode

"Turn on wildmenu:
"   First tab: longest match, list in the statusbar.
"   Following tabs: cycle through matches
set wildmenu wildmode=longest:full,full

" Turn off visual beep
set vb t_vb=
" Always display a status line
set laststatus=2
" Command line height
set cmdheight=1
" Set hidden characters
set listchars=tab:▸\ ,eol:↵,trail:·
" Set hidden characters
set listchars=tab:▸\ ,trail:·
" Show line numbers
set number

syntax on

" Parenthasis matching
function! MatchParenToggle()
    if g:loaded_matchparen==1
        execute 'NoMatchParen'
        let g:loaded_matchparen=0
    else
        execute 'DoMatchParen'
        let g:loaded_matchparen=1
    endif
endfun
map <leader>mp :call MatchParenToggle()<CR>

" Set soft tab settings
set expandtab tabstop=4 shiftwidth=4 " 4 spaces for tabs

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  "filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal g`\"" |
    \ endif

  augroup END

else
  " always set autoindenting on
  set autoindent
endif 

