#!/bin/bash
# vim:syntax=sh
# vim:filetype=sh

# Decide what sort of system we're on
if [ -f /bin/uname ] || [ -f /usr/bin/uname ]; then
  export GBP_OS=`uname`
  if [ $GBP_OS = 'Darwin' ]; then
     export GBP_OS='Mac'
  elif [ $GBP_OS = 'Linux' ]; then
     export GBP_OS='linux'
  fi
else
  echo Unknown OS type: ${GBP_OS}.
  export GBP_OS='unknown'
fi

# Set UTF encoding locale.  Needed by 'Click' for instance.
if [[ -z "$LANG" ]]; then
    export LANG='en_AU.UTF-8'
    export LANGUAGE=en_AU.UTF-8
fi
export LC_COLLATE=en_AU.UTF-8
export LC_CTYPE=en_AU.UTF-8
export LC_MESSAGES=en_AU.UTF-8
export LC_MONETARY=en_AU.UTF-8
export LC_NUMERIC=en_AU.UTF-8
export LC_TIME=en_AU.UTF-8
export LC_ALL=en_AU.UTF-8
export LESSCHARSET=utf-8

# Set system-specific stuff, first based on HOSTNAME
export GBP_HOSTNAME=`hostname`
if [ -n $GBP_HOSTNAME ]; then
  if [ $GBP_OS = 'Mac' ]; then
    export GBP_QUEUE_TYPE='NONE'

    # Make sure ._* files don't get added to tar files, etc.
    export COPYFILE_DISABLE=1
    if [ -f "/usr/local/modules-tcl/init/sh" ]; then
      source /usr/local/modules-tcl/init/sh
    fi

    # Add LLVM/Clang to the path
    export PATH=/usr/local/opt/llvm/bin:$PATH

    # Add MacTex to the path
    export PATH=/usr/local/texlive/latest/bin/x86_64-darwin:$PATH

    # Add mySQL to the path
	export MYSQL_PATH=/usr/local/Cellar/mysql/5.7.19  
	export PATH=$PATH:$MYSQL_PATH/bin

    # Set paths for Homebrew.  Add the Homebrew direcory and 
    # place the Homebrew bin directory before system directory.
    # This ensures that the Homebrew installs override all others.
    export PATH="/usr/local/bin:$PATH"
    export PATH="/usr/local/sbin:$PATH"

    export LIBRARY_PATH="${GBP_HOME}/my_code/lib:${GBP_HOME}/3rd_Party/lib:$LIBRARY_PATH"

  elif [ $GBP_HOSTNAME = 'farnarkle1' ] || [ $GBP_HOSTNAME = 'farnarkle2' ]; then
    #export LC_ALL=en_AU.utf8
    #export LANG=en_AU.utf8
    export GBP_QUEUE_TYPE='SLURM'
  elif [ $GBP_HOSTNAME = 'g2.hpc.swin.edu.au' ]; then
    export GBP_QUEUE_TYPE='PBS'
  elif [ $GBP_HOSTNAME = 'sstar001.hpc.swin.edu.au' ] || [ $GBP_HOSTNAME = 'sstar002.hpc.swin.edu.au' ]; then
    export GBP_QUEUE_TYPE='NONE'
  # This case is needed because CI tests break if bash returns text
  elif [ "$GBPHOME_TEST" = 1 ]; then
    export GBP_QUEUE_TYPE='NONE'
  else
    echo There is no default configuration in .bashrc.system for this system.  Assigning defaults.
    export GBP_QUEUE_TYPE='SERIAL'
  fi
else
  echo Could not identify hostname in .bashrc.system for this system.  Assigning defaults.
fi

# Add '3rd_Party' and 'my_code' directories to paths
export PATH="${GBP_HOME}/my_code/bin:${GBP_HOME}/3rd_Party/bin:$PATH"
export LD_LIBRARY_PATH="${GBP_HOME}/my_code/lib:${GBP_HOME}/3rd_Party/lib:${LD_LIBRARY_PATH}"
export INCLUDE="${GBP_HOME}/my_code/include:${GBP_HOME}/3rd_Party/include:${INCLUDE}"
export CPATH="${GBP_HOME}/my_code/include:${GBP_HOME}/3rd_Party/include:${CPATH}"
export PKG_CONFIG_PATH=${GBP_HOME}/3rd_Party/lib/pkgconfig:${PKG_CONFIG_PATH}

# If using a custom-installed gcc, then 3rd party libraries will end-up in the following 
# path ... prepend it to make sure it is preferred over a system install
export LD_LIBRARY_PATH="${GBP_HOME}/3rd_Party/lib64:${LD_LIBRARY_PATH}"

# Add ~/bin to PATH
export PATH="${GBP_HOME}/bin:$PATH"

# Add pyenv python installations to path.  Put this last to
# mitigate conflicts with other installations.
export PYENV_ROOT=${GBP_HOME}/.pyenv
export PATH=$PYENV_ROOT/bin:${PATH}

# Is this needed here? ... it's a bit slow (.1s on Mac).
if hash pyenv 2>/dev/null > /dev/null; then eval "$(pyenv init -)"; fi

# Eliminate duplicates in paths
if [ -n "$ZSH_VERSION" ]; then
   typeset -aU cdpath fpath path
else
   typeset -a cdpath fpath path
fi
