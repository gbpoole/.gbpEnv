# TMUX configuration for gbp

# This configuration was originally taken from here:
#    https://github.com/hamvocke/dotfiles
#
# and is described in the post here:
#    https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
#
# It has been heavily modified since.

# Change the prefix from 'C-b' to 'C-a' {{{
# (remap capslock to CTRL for easy access)
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
# }}}

# <prefix>-R: Reload config file {{{
unbind R
bind R source-file ~/.tmux.conf\; display-message "Config reloaded..."
# }}}

# <prefix>-p: Previous window  {{{
unbind p
bind p previous-window
# }}}

# <prefix>-r: Prompt for new window name {{{
unbind r
bind r command-prompt -p "window name:" "rename-window '%%'"
# }}}

# <prefix>-c: Create new window and prompt for name {{{
# Note, need to have automatic window renaming turned off:
#   https://stackoverflow.com/questions/25477279/create-new-window-and-set-name
unbind c
bind c command-prompt -p "window name:" "new-window -c '#{pane_current_path}'; rename-window '%%'"
# }}}

# Alt-arrow keys: switch panes {{{
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
# }}}

# Set-up mouse controls {{{
set -g mouse on

# <Double-LMB>: Select-&-copy word
bind-key -T copy-mode-vi DoubleClick1Pane \
    select-pane \; \
    send-keys -X select-word-no-clear \; \
    send-keys -X copy-pipe-no-clear "xclip -in -sel primary"
bind-key -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe-no-clear "xclip -in -sel primary"

# Triple LMB Select & Copy (Line)
bind-key -T copy-mode-vi TripleClick1Pane \
    select-pane \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe-no-clear "xclip -in -sel primary"
bind-key -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe-no-clear "xclip -in -sel primary"
# }}}

# OPTIONS {{{
set-window-option -g mode-keys vi               # enable vi mode keys
set -sg escape-time 1                           # Set command delay
set-option -g allow-rename off                  # don't rename window automatically
#set -g default-terminal "screen-256color"      # set default terminal mode to 256 colors
set -g default-terminal "rxvt-unicode-256color" # needed to allow italics
# }}}

# Fix pbcopy/pbpaste {{{
if 'command -v reattach-to-user-namespace >/dev/null' \
    'set -gq @osx-pasteboard true'

if 'tmux show -gv @osx-clipboard' \
    'set -g default-command "reattach-to-user-namespace -l $SHELL"'
# }}}

# Make sure to start with a clean environment
# This breaks the zsh prompt somehow! :(
#set-option -g default-command 'env -i USER="$USER" LOGNAME="$LOGNAME" $SHELL'

# Set bells etc. to be quiet {{{
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none
# }}}

# Set-up the status bar {{{
source-file $GBP_HOME/.tmux-molokai.conf
# }}}

#### PLUGINS #### {{{
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/vim-tmux'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# Kanagawa theme
set -g @plugin 'tyetyetye/kanagawa-tmux'

# Resurrect & Continuum (note: interval is in mins)
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '720'

# Sessionist
#
#    prefix + g - prompts for session name and switches to it. Performs 'kind-of' name completion.
#                 Faster than the built-in prefix + s prompt for long session lists.
#    prefix + C (shift + c) - prompt for creating a new session by name.
#    prefix + X (shift + x) - kill current session without detaching tmux.
#    prefix + S (shift + s) - switches to the last session.
#                             The same as built-in prefix + L that everyone seems to override with some other binding.
#    prefix + @ - promote current pane into a new session.
#                 Analogous to how prefix + ! breaks current pane to a new window.
#    prefix + t<secondary-key> - join currently marked pane (prefix + m) to current session/window, and switch to it
#        secondary-keys
#            h, -, ": join horizontally
#            v, |, %: join vertically
#            f, @: join full screen
set -g @plugin 'tmux-plugins/tmux-sessionist'
# }}}

# Pain control {{{
#
# Navigation
#    prefix + h and prefix + C-h
#        select pane on the left
#    prefix + j and prefix + C-j
#        select pane below the current one
#    prefix + k and prefix + C-k
#        select pane above
#    prefix + l and prefix + C-l
#        select pane on the right
#
# Resizing
#    prefix + shift + h
#        resize current pane 5 cells to the left
#    prefix + shift + j
#        resize 5 cells in the down direction
#    prefix + shift + k
#        resize 5 cells in the up direction
#    prefix + shift + l
#        resize 5 cells to the right
#
# Splitting
#    prefix + \
#        split current pane horizontally
#    prefix + -
#        split current pane vertically
#    prefix + |
#        split current pane full width horizontally
#    prefix + _
#        split current pane full width vertically
#
# Swapping windows
#    prefix + < - moves current window one position to the left
#    prefix + > - moves current window one position to the right

#set -g @plugin 'tmux-plugins/tmux-pain-control'
# Since pain control sets <prefix>-c and I don't seem to be able to override it, I will just copy the bits I want here ...
pane_resize="5"
# pane_navigation_bindings
bind-key h   select-pane -L
bind-key C-h select-pane -L
bind-key j   select-pane -D
bind-key C-j select-pane -D
bind-key k   select-pane -U
bind-key C-k select-pane -U
bind-key l   select-pane -R
bind-key C-l select-pane -R
# window_move_bindings
bind-key -r "<" swap-window -t -1
bind-key -r ">" swap-window -t +1
# pane_resizing_bindings
bind-key -r H resize-pane -L "$pane_resize"
bind-key -r J resize-pane -D "$pane_resize"
bind-key -r K resize-pane -U "$pane_resize"
bind-key -r L resize-pane -R "$pane_resize"
# pane_split_bindings
bind-key "\\" split-window -h  -c "#{pane_current_path}"
bind-key "-"  split-window -v  -c "#{pane_current_path}"
bind-key "|"  split-window -fh -c "#{pane_current_path}"
bind-key "_"  split-window -fv -c "#{pane_current_path}"
bind-key "%"  split-window -h  -c "#{pane_current_path}"
bind-key '"'  split-window -v  -c "#{pane_current_path}"
# }}}

# Make sure TPM is installed and then initialize it {{{
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Make sure vim sessions are ressurrected (assume nvim)
set -g @resurrect-strategy-nvim 'session'

# Initialize TMUX plugin manager (keep this line at the very bottom of .tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
# }}}
